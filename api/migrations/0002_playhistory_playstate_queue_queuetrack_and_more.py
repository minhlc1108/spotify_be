# Generated by Django 4.2.9 on 2025-04-22 14:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PlayHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("played_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "play_history",
                "ordering": ["-played_at"],
            },
        ),
        migrations.CreateModel(
            name="PlayState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("progress", models.PositiveIntegerField(default=0)),
                ("is_playing", models.BooleanField(default=False)),
                ("is_shuffle", models.BooleanField(default=False)),
                ("is_looping", models.BooleanField(default=False)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Queue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="QueueTrack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.PositiveIntegerField()),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("queue", "User Queue"),
                            ("context", "Playlist/Album/Artist"),
                        ],
                        max_length=20,
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["position"],
            },
        ),
        migrations.AlterModelOptions(
            name="user",
            options={"verbose_name": "user", "verbose_name_plural": "users"},
        ),
        migrations.RemoveConstraint(
            model_name="playlisttrack",
            name="unique_order_per_playlist",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="dob",
            new_name="birth_date",
        ),
        migrations.RemoveField(
            model_name="album",
            name="genres",
        ),
        migrations.RemoveField(
            model_name="user",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="user",
            name="display_name",
        ),
        migrations.RemoveField(
            model_name="user",
            name="role",
        ),
        migrations.AddField(
            model_name="album",
            name="album_type",
            field=models.CharField(
                choices=[("ALBUM", "Album"), ("SINGLE", "Single"), ("EP", "EP")],
                default="SINGLE",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="playlist",
            name="public",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="playlisttrack",
            name="added_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="track",
            name="duration",
            field=models.PositiveBigIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="user",
            name="avatar",
            field=models.ImageField(blank=True, null=True, upload_to="avatars/"),
        ),
        migrations.AlterField(
            model_name="album",
            name="artists",
            field=models.ManyToManyField(related_name="albums", to="api.artist"),
        ),
        migrations.AlterField(
            model_name="album",
            name="release_date",
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="library",
            name="saved_albums",
            field=models.ManyToManyField(
                blank=True, related_name="saved_by_users", to="api.album"
            ),
        ),
        migrations.AlterField(
            model_name="library",
            name="saved_playlists",
            field=models.ManyToManyField(
                blank=True, related_name="saved_by_users", to="api.playlist"
            ),
        ),
        migrations.AlterField(
            model_name="playlisttrack",
            name="order",
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name="track",
            name="artists",
            field=models.ManyToManyField(related_name="tracks", to="api.artist"),
        ),
        migrations.AlterField(
            model_name="track",
            name="genres",
            field=models.ManyToManyField(related_name="tracks", to="api.genre"),
        ),
        migrations.AlterField(
            model_name="track",
            name="release_date",
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4, editable=False, primary_key=True, serialize=False
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="playlisttrack",
            unique_together={("playlist", "order")},
        ),
        migrations.AddIndex(
            model_name="track",
            index=models.Index(fields=["play_count"], name="track_play_co_13ec9b_idx"),
        ),
        migrations.AddField(
            model_name="queuetrack",
            name="queue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tracks",
                to="api.queue",
            ),
        ),
        migrations.AddField(
            model_name="queuetrack",
            name="track",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.track"
            ),
        ),
        migrations.AddField(
            model_name="queue",
            name="current_track",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.track",
            ),
        ),
        migrations.AddField(
            model_name="queue",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="queue",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="playstate",
            name="current_track",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.track"
            ),
        ),
        migrations.AddField(
            model_name="playstate",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="play_state",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="playhistory",
            name="track",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="play_histories",
                to="api.track",
            ),
        ),
        migrations.AddField(
            model_name="playhistory",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="play_history",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="queuetrack",
            unique_together={("queue", "position", "source")},
        ),
        migrations.AddIndex(
            model_name="playstate",
            index=models.Index(
                fields=["-last_updated"], name="api_playsta_last_up_445622_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="playhistory",
            index=models.Index(fields=["user"], name="play_histor_user_id_2d535d_idx"),
        ),
        migrations.AddIndex(
            model_name="playhistory",
            index=models.Index(fields=["track"], name="play_histor_track_i_e8cb6a_idx"),
        ),
        migrations.AddIndex(
            model_name="playhistory",
            index=models.Index(
                fields=["-played_at"], name="play_histor_played__8d598e_idx"
            ),
        ),
    ]
